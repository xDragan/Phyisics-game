#include "Globals.h"
#include "Application.h"
#include "ModuleSceneIntro.h"
#include "Primitive.h"
#include "PhysBody3D.h"

ModuleSceneIntro::ModuleSceneIntro(Application* app, bool start_enabled) : Module(app, start_enabled)
{
}

ModuleSceneIntro::~ModuleSceneIntro()
{}

// Load assets
bool ModuleSceneIntro::Start()
{
	LOG("Loading Intro assets");
	bool ret = true;
	turbo = 50.0;
	fastest = 100.0;
	start = true;
	lap5 = 0;
	total_time = 0;

	Floor.color = Grey;
	Floor.size = { 10000,0,10000 };
	Floor.SetPos(0, 0, 0);

	//---------PowerUps
	AddPowerUp(3, 3, 3, 50, 1, 153, 0); 
	//--------- Sensors
	int j = 0;
	AddSens(4.08, 2, 24.063, 240.43, 1, 15.11, j++,0);
	AddSens(4.08, 2, 24.063, 586.22, 1, 39.46, j++, 4.3);
	AddSens(4.08, 2, 24.063, 453.98, 1, 210.07, j++, 16.777);
	AddSens(4.08, 2, 24.063, 163.4, 1, 152.94, j++, 90);
	AddSens(4.08, 2, 24.063, 329.08, 1, 393.14, j++, 20.088);
	AddSens(4.08, 2, 24.063, 251.21, 1, 378.55, j++, -25.507);
	AddSens(13.789,0.1,16.849, -75.19, 1,217.66, j++, 0);
	
	AddPowerUp(13.789, 0.1, 16.849, -75.19, 1, 217.66, 1);
	AddPowerUp(13.789, 0.1, 16.849, -53.85, 1, 217.66, 2);
	AddPowerUp(13.789, 0.1, 16.849, -32.55, 1, 217.66,3);

	//////////////////////constraint
	//	AddPowerUp(3, 3, 3, 50, 1, 153, 0); 


	actual.Stop();
	//track
	int i = 0;
	//recta ext
	AddWall(10, 2, 1, 5.76, 1, 34.87, i++, 24.341);
	AddWall(10, 2, 1, 14.68, 1, 30.83, i++, 24.341);
	AddWall(10, 2, 1, 23.59, 1, 26.88, i++, 24.341);
	AddWall(10, 2, 1, 32.51, 1, 22.85, i++, 24.341);
	AddWall(10, 2, 1, 41.61, 1, 18.9, i++, 24.502);
	AddWall(10, 2, 1, 50.54, 1, 14.86, i++, 25.058);
	AddWall(10, 2, 1, 59.38, 1, 10.57, i++, 26.495);
	AddWall(10, 2, 1, 68.44, 1, 6.74, i++, 18.773);
	AddWall(10, 2, 1, 78.29, 1, 395, i++, 13.12);
	AddWall(10, 2, 1, 87.97, 1, 2.16, i++, 6.278);
	AddWall(10, 2, 1, 92.99f, 1, 1.072f, i++);
	AddWall(10, 2, 1, 102.781f, 1, 1.072f, i++);
	AddWall(10, 2, 1, 112.781f, 1, 1.072f, i++);
	AddWall(10, 2, 1, 122.781f, 1, 1.072f, i++);
	AddWall(10, 2, 1, 132.781f, 1, 1.072f, i++);
	AddWall(10, 2, 1, 142.781f, 1, 1.072f, i++);
	AddWall(10, 2, 1, 152.781f, 1, 1.072f, i++);
	AddWall(10, 2, 1, 162.781f, 1, 1.072f, i++);
	AddWall(10, 2, 1, 172.781f, 1, 1.072f, i++);
	AddWall(10, 2, 1, 182.781f, 1, 1.072f, i++);
	AddWall(10, 2, 1, 192.781f, 1, 1.072f, i++);
	AddWall(10, 2, 1, 202.781f, 1, 1.072f, i++);
	AddWall(10, 2, 1, 212.781f, 1, 1.072f, i++);
	AddWall(10, 2, 1, 222.781f, 1, 1.072f, i++);
	AddWall(10, 2, 1, 232.781f, 1, 1.072f, i++);
	AddWall(10, 2, 1, 242.781f, 1, 1.072f, i++);
	AddWall(10, 2, 1, 252.781f, 1, 1.072f, i++);
	AddWall(10, 2, 1, 262.781f, 1, 1.072f, i++);
	AddWall(10, 2, 1, 272.781f, 1, 1.072f, i++);
	AddWall(10, 2, 1, 282.781f, 1, 1.072f, i++);
	AddWall(10, 2, 1, 292.781f, 1, 1.072f, i++);
	AddWall(10, 2, 1, 302.781f, 1, 1.072f, i++);
	AddWall(10, 2, 1, 312.781f, 1, 1.072f, i++);
	AddWall(10, 2, 1, 322.781f, 1, 1.072f, i++);
	AddWall(10, 2, 1, 332.781f, 1, 1.072f, i++);
	AddWall(10, 2, 1, 342.781f, 1, 1.072f, i++);
	AddWall(10, 2, 1, 352.781f, 1, 1.072f, i++);
	AddWall(10, 2, 1, 362.781f, 1, 1.072f, i++);
	AddWall(10, 2, 1, 372.781f, 1, 1.072f, i++);
	AddWall(10, 2, 1, 382.781f, 1, 1.072f, i++);
	AddWall(10, 2, 1, 391.781f, 1, 1.072f, i++);
	AddWall(10, 2, 1, 401.781f, 1, 1.072f, i++);
	AddWall(10, 2, 1, 411.781f, 1, 1.072f, i++);
	AddWall(10, 2, 1, 421.781f, 1, 1.072f, i++);
	AddWall(10, 2, 1, 431.781f, 1, 1.072f, i++);
	AddWall(10, 2, 1, 441.781f, 1, 1.072f, i++);
	AddWall(10, 2, 1, 451.781f, 1, 1.072f, i++);
	AddWall(10, 2, 1, 461.781f, 1, 1.072f, i++);
	AddWall(10, 2, 1, 471.781f, 1, 1.072f, i++);
	AddWall(10, 2, 1, 481.781f, 1, 1.072f, i++);
	AddWall(10, 2, 1, 491.781f, 1, 1.072f, i++);
	AddWall(10, 2, 1, 501.781f, 1, 1.072f, i++);
	AddWall(10, 2, 1, 511.781f, 1, 1.072f, i++);
	AddWall(10, 2, 1, 521.781f, 1, 1.072f, i++);
	AddWall(10, 2, 1, 531.781f, 1, 1.072f, i++);
	AddWall(10, 2, 1, 541.781f, 1, 1.072f, i++);
	AddWall(10, 2, 1, 551.781f, 1, 1.072f, i++);
	AddWall(10, 2, 1, 561.781f, 1, 1.072f, i++);
	//curva 1 (chicana) ext
	AddWall(10, 2, 1, 576.59f, 1, 2.09f, i++, -6.615f);
	AddWall(10, 2, 1, 586.22f, 1, 4.8f, i++, -23.786);
	AddWall(10, 2, 1, 594.8f, 1, 9.98, i++, -38.184);
	AddWall(10, 2, 1, 600.59, 1, 17.99, i++, -69.129);
	AddWall(10, 2, 1, 603.56f, 1, 27.57, i++, -77.172);
	AddWall(10, 2, 1, 605.8f, 1, 37.32, i++, -76.59);
	AddWall(10, 2, 1, 608.16, 1, 47.03, i++, -75.472);
	AddWall(10, 2, 1, 610.84, 1, 56.59, i++, -72.61);
	//curva 2 (chicana) ext
	AddWall(10, 2, 1, 614.01, 1, 66.07, i++, -70.846);
	AddWall(10, 2, 1, 617.8, 1, 75.25, i++, -64.433);
	AddWall(10, 2, 1, 622.61, 1, 83.93, i++, -57.695);
	AddWall(10, 2, 1, 628.54, 1, 92.01, i++, -50.16);
	AddWall(10, 2, 1, 635.51, 1, 98.54, i++, -36.705);
	AddWall(10, 2, 1, 643.79, 1, 104.04, i++, -30.548);
	AddWall(10, 2, 1, 652.82, 1, 107.72, i++, -14.036);
	AddWall(10, 2, 1, 662.68, 1, 109.49, i++, -6.846);
	AddWall(10, 2, 1, 672.58, 1, 110.71, i++, -7.304);
	AddWall(10, 2, 1, 682.54, 1, 111.7, i++, -4.203);
	AddWall(10, 2, 1, 692.49, 1, 112.25, i++, -2.203);
	AddWall(10, 2, 1, 702.49, 1, 112.58, i++, -2.203);
	AddWall(10, 2, 1, 712.49, 1, 112.97, i++, -2.203);
	AddWall(10, 2, 1, 722.5, 1, 113.32, i++, -1.646);
	AddWall(10, 2, 1, 732.51, 1, 113.34, i++, 1.461);
	//curva 3 (curvon)ext
	AddWall(10, 2, 1, 742.5, 1, 113.1, i++, 1.574);
	AddWall(10, 2, 1, 752.53, 1, 112.91, i++, 0.83);
	AddWall(10, 2, 1, 762.57, 1, 112.98, i++, -1.534);
	AddWall(10, 2, 1, 772.57, 1, 113.25, i++, -2.291);
	AddWall(10, 2, 1, 782.6, 1, 113.71, i++, -4.421);
	AddWall(10, 2, 1, 792.57, 1, 114.68, i++, -6.539);
	AddWall(10, 2, 1, 802.5, 1, 115.76, i++, -6.164);
	AddWall(10, 2, 1, 812.47, 1, 116.88, i++, -7.292);
	AddWall(10, 2, 1, 822.32, 1, 118.64, i++, -13.683);
	AddWall(10, 2, 1, 831.7, 1, 121.84, i++, -22.561);
	AddWall(10, 2, 1, 840.71, 1, 126.68, i++, -36.064);
	AddWall(10, 2, 1, 848.44, 1, 133.13, i++, -44.198);
	AddWall(10, 2, 1, 854.84, 1, 140.95, i++, -56.756);
	AddWall(10, 2, 1, 859.65, 1, 149.8, i++, -66.458);
	AddWall(10, 2, 1, 863.16, 1, 159.25, i++, -75.077);
	AddWall(10, 2, 1, 865, 1, 169.16, i++, -84.055);
	AddWall(10, 2, 1, 866, 1, 179.17, i++, -84.055);
	AddWall(10, 2, 1, 866.5, 1, 189.22, i++, -89.341);
	AddWall(10, 2, 1, 866.5, 1, 199.22, i++, -89.105);
	AddWall(10, 2, 1, 865.75, 1, 209.24, i++, -98.855);
	AddWall(10, 2, 1, 863.89, 1, 219.03, i++, -101.922);
	AddWall(10, 2, 1, 860.98, 1, 228.64, i++, -111.619);
	AddWall(10, 2, 1, 857.04, 1, 237.84, i++, -113.516);
	AddWall(10, 2, 1, 852.34, 1, 246.72, i++, -122.458);
	AddWall(10, 2, 1, 846.49, 1, 254.96, i++, 53.736);
	AddWall(10, 2, 1, 839.97, 1, 262.6, i++, 44.296);
	AddWall(10, 2, 1, 831.92, 1, 268.8, i++, 32.024);
	AddWall(10, 2, 1, 823.03, 1, 273.48, i++, 22.463);
	AddWall(10, 2, 1, 813.31, 1, 276.18, i++, 7.983);
	AddWall(10, 2, 1, 803.28, 1, 276.74, i++, -2.188);
	AddWall(10, 2, 1, 793.11, 1, 276.17, i++, -5.66);
	AddWall(10, 2, 1, 783.19, 1, 274.7, i++, -10.947);
	AddWall(10, 2, 1, 773.33, 1, 273, i++, -8.454);
	AddWall(10, 2, 1, 763.43, 1, 271.59, i++, -8.178);
	AddWall(10, 2, 1, 753.53, 1, 270.19, i++, -7.972);
	AddWall(10, 2, 1, 743.63, 1, 268.78, i++, -8.349);
	AddWall(10, 2, 1, 733.73, 1, 267.38, i++, -8.284);
	AddWall(10, 2, 1, 723.82, 1, 265.97, i++, -8.284);
	AddWall(10, 2, 1, 714.13, 1, 264.6, i++, -8.284);
	AddWall(10, 2, 1, 704.23, 1, 263.19, i++, -8.284);
	AddWall(10, 2, 1, 694.33, 1, 261.79, i++, -8.284);
	AddWall(10, 2, 1, 684.43, 1, 260.39, i++, -8.284);
	AddWall(10, 2, 1, 674.53, 1, 258.98, i++, -8.284);
	AddWall(10, 2, 1, 664.63, 1, 257.58, i++, -8.284);
	AddWall(10, 2, 1, 654.72, 1, 256.17, i++, -8.284);
	AddWall(10, 2, 1, 645.03, 1, 254.8, i++, -8.284);
	AddWall(10, 2, 1, 635.13, 1, 253.39, i++, -8.284);
	AddWall(10, 2, 1, 625.2, 1, 251.99, i++, -8.284);
	AddWall(10, 2, 1, 615.3, 1, 250.58, i++, -8.284);
	AddWall(10, 2, 1, 605.47, 1, 249.54, i++, -3.888);
	AddWall(10, 2, 1, 595.52, 1, 249.19, i++, -0.88);
	AddWall(10, 2, 1, 585.49, 1, 249.13, i++, -0.886);
	AddWall(10, 2, 1, 575.53, 1, 249.35, i++, 3.113);
	AddWall(10, 2, 1, 565.6, 1, 250.29, i++, 6.737);
	AddWall(10, 2, 1, 555.75, 1, 251.78, i++, 10.738);
	AddWall(10, 2, 1, 545.88, 1, 253.58, i++, 9.694);
	AddWall(10, 2, 1, 536.14, 1, 255.64, i++, 13.896);
	AddWall(10, 2, 1, 526.46, 1, 258.01, i++, 12.936);
	AddWall(10, 2, 1, 516.66, 1, 260.09, i++, 12.33);
	AddWall(10, 2, 1, 506.77, 1, 261.41, i++, 2.855);
	AddWall(10, 2, 1, 496.79, 1, 261.17, i++, -4.461);
	AddWall(10, 2, 1, 486.95, 1, 259.58, i++, -12.562);
	AddWall(10, 2, 1, 477.28, 1, 256.71, i++, -20.202);
	AddWall(10, 2, 1, 468.27, 1, 252.41, i++, -30.818);
	AddWall(10, 2, 1, 460.3, 1, 246.27, i++, -44.136);
	AddWall(10, 2, 1, 453.68, 1, 238.82, i++, -52.169);
	AddWall(10, 2, 1, 448, 1, 230.48, i++, -59.522);
	AddWall(10, 2, 1, 443.74, 1, 221.46, i++, -69.444);
	AddWall(10, 2, 1, 440.84, 1, 211.94, i++, -77.815);
	AddWall(10, 2, 1, 438.98, 1, 202.13, i++, -81.403);
	AddWall(10, 2, 1, 437.07, 1, 192.56, i++, -76.45);
	AddWall(10, 2, 1, 434.75, 1, 182.9, i++, -76.997);
	AddWall(10, 2, 1, 431.92, 1, 173.44, i++, -70.71);
	AddWall(10, 2, 1, 428.18, 1, 164.31, i++, -64.466);
	AddWall(10, 2, 1, 423.21, 1, 155.6, i++, -56.489);
	AddWall(10, 2, 1, 417.74, 1, 147.3, i++, -57.133);
	AddWall(10, 2, 1, 411.86, 1, 139.36, i++, -51.14);
	AddWall(10, 2, 1, 405.24, 1, 132.05, i++, -45.5);
	AddWall(10, 2, 1, 397.8, 1, 125.48, i++, -38.088);
	AddWall(10, 2, 1, 390.04, 1, 119.26, i++, -39.14);
	AddWall(10, 2, 1, 382.01, 1, 113.52, i++, -33.521);
	AddWall(10, 2, 1, 373.46, 1, 108.6, i++, -26.853);
	AddWall(10, 2, 1, 364.56, 1, 104.96, i++, -18.644);
	AddWall(10, 2, 1, 355.17, 1, 101.68, i++, -19.891);
	AddWall(10, 2, 1, 345.69, 1, 98.95, i++, -13.904);
	AddWall(10, 2, 1, 335.99, 1, 97.15, i++, -7.324);
	AddWall(10, 2, 1, 325.98, 1, 95.91, i++, -7.125);
	AddWall(10, 2, 1, 316.12, 1, 95.19, i++, -2.349);
	AddWall(10, 2, 1, 306.44, 1, 95.12, i++, 0);
	AddWall(10, 2, 1, 296.49, 1, 95.06, i++);
	AddWall(10, 2, 1, 286.56, 1, 95.06, i++);
	AddWall(10, 2, 1, 276.56, 1, 95.19, i++);
	AddWall(10, 2, 1, 266.56, 1, 95.19, i++);
	AddWall(10, 2, 1, 256.56, 1, 95.19, i++);
	AddWall(10, 2, 1, 246.56, 1, 95.19, i++);
	AddWall(10, 2, 1, 236.56, 1, 95.19, i++);
	AddWall(10, 2, 1, 226.56, 1, 95.19, i++);
	AddWall(10, 2, 1, 216.56, 1, 95.19, i++);
	AddWall(10, 2, 1, 206.56, 1, 95.19, i++);
	AddWall(10, 2, 1, 196.56, 1, 95.19, i++);
	AddWall(10, 2, 1, 186.56, 1, 95.19, i++);
	AddWall(10, 2, 1, 176.56, 1, 95.19, i++);
	AddWall(10, 2, 1, 166.56, 1, 95.19, i++);
	AddWall(10, 2, 1, 157.01, 1, 95.44, i++, 2.949);
	AddWall(10, 2, 1, 148.04, 1, 98.3, i++, 31891);
	AddWall(10, 2, 1, 141.17, 1, 104.94, i++, 55.774);
	AddWall(10, 2, 1, 138.29, 1, 113.69, i++, 87.242);
	AddWall(10, 2, 1, 139.41, 1, 123.25, i++, -72.875);
	AddWall(10, 2, 1, 144.01, 1, 131.62, i++, -48.691);
	AddWall(10, 2, 1, 151.66, 1, 137.4, i++, -25.085);
	AddWall(10, 2, 1, 160.88, 1, 139.75, i++, -2.743);
	AddWall(10, 2, 1, 170.82, 1, 139.57, i++, 4.748);
	AddWall(10, 2, 1, 180.69, 1, 138.89, i++, 1.95);
	AddWall(10, 2, 1, 190.66, 1, 138.58, i++, 1.344);
	AddWall(10, 2, 1, 200.72, 1, 138.7, i++, -3.383);
	AddWall(10, 2, 1, 210.69, 1, 139.48, i++, -6.798);
	AddWall(10, 2, 1, 220.63, 1, 141.27, i++, -15.475);
	AddWall(10, 2, 1, 230.2, 1, 144.15, i++, -19.274);
	AddWall(10, 2, 1, 239.54, 1, 147.73, i++, -22.496);
	AddWall(10, 2, 1, 248.67, 1, 151.8, i++, -26.067);
	AddWall(10, 2, 1, 257.43, 1, 156.82, i++, -35.157);
	AddWall(10, 2, 1, 265.49, 1, 162.74, i++, -38.071);
	AddWall(10, 2, 1, 273.4, 1, 168.96, i++, -39.234);
	AddWall(10, 2, 1, 280.98, 1, 175.47, i++, -41.464);
	AddWall(10, 2, 1, 288.45, 1, 182.01, i++, -40.132);
	AddWall(10, 2, 1, 296.08, 1, 188.48, i++, -40.132);

	AddWall(10, 2, 1, 303.71, 1, 194.94, i++, -40.132);
	AddWall(10, 2, 1, 311.34, 1, 201.41, i++, -40.132);
	AddWall(10, 2, 1, 318.97, 1, 207.87, i++, -40.132);
	AddWall(10, 2, 1, 326.44, 1, 214.2, i++, -40.132);
	AddWall(10, 2, 1, 334.07, 1, 220.66, i++, -40.132);
	AddWall(10, 2, 1, 341.7, 1, 227.13, i++, -40.132);
	AddWall(10, 2, 1, 349.33, 1, 233.59, i++, -40.132);
	AddWall(10, 2, 1, 356.96, 1, 240.05, i++, -40.132);
	AddWall(10, 2, 1, 364.59, 1, 246.52, i++, -40.132);
	AddWall(10, 2, 1, 372.3, 1, 252.89, i++, -40.132);
	AddWall(10, 2, 1, 379.88, 1, 259.31, i++, -40.132);
	AddWall(10, 2, 1, 387.28, 1, 265.84, i++, -40.132);
	AddWall(10, 2, 1, 394.9, 1, 272.32, i++, -40.132);
	AddWall(10, 2, 1, 402.52, 1, 278.8, i++, -40.132);
	AddWall(10, 2, 1, 410.13, 1, 285.27, i++, -40.132);
	AddWall(10, 2, 1, 417.59, 1, 291.62, i++, -40.132);
	AddWall(10, 2, 1, 425.21, 1, 298.1, i++, -40.132);
	AddWall(10, 2, 1, 432.83, 1, 304.57, i++, -40.132);
	AddWall(10, 2, 1, 440.45, 1, 311.05, i++, -40.132);
	AddWall(10, 2, 1, 448.07, 1, 317.53, i++, -40.132);
	AddWall(10, 2, 1, 455.68, 1, 324.01, i++, -40.132);
	AddWall(10, 2, 1, 463.39, 1, 330.39, i++, -40.132);
	AddWall(10, 2, 1, 470.95, 1, 336.83, i++, -40.132);
	AddWall(10, 2, 1, 478.48, 1, 343.46, i++, -40.132);
	AddWall(10, 2, 1, 486.05, 1, 349.9, i++, -40.132);
	AddWall(10, 2, 1, 493.15, 1, 356.77, i++, -48.14);
	AddWall(10, 2, 1, 499.83, 1, 364.11, i++, -47.849);
	AddWall(10, 2, 1, 504.98, 1, 372.72, i++, -71.184);
	AddWall(10, 2, 1, 506.88, 1, 382.43, i++, -87.682);
	AddWall(10, 2, 1, 506.64, 1, 392.42, i++, -95.108);
	AddWall(10, 2, 1, 505.04, 1, 402.25, i++, -102.362);
	AddWall(10, 2, 1, 502.16, 1, 411.92, i++, -110.804);
	AddWall(10, 2, 1, 497.13, 1, 420.51, i++, 49.79);
	AddWall(10, 2, 1, 489.73, 1, 427.34, i++, 35.074);
	AddWall(10, 2, 1, 481.27, 1, 432.61, i++, 28.887);
	AddWall(10, 2, 1, 471.67, 1, 435.9, i++, 9.824);
	AddWall(10, 2, 1, 461.72, 1, 437.31, i++, 5.843);
	AddWall(10, 2, 1, 451.55, 1, 437.2, i++, -7.268);
	AddWall(10, 2, 1, 441.68, 1, 435.94, i++, -8.043);
	AddWall(10, 2, 1, 431.79, 1, 434.5, i++, -8.775);
	AddWall(10, 2, 1, 422.04, 1, 432.89, i++, -9.164);
	AddWall(10, 2, 1, 412.22, 1, 431.47, i++, -8.367);
	AddWall(10, 2, 1, 402.44, 1, 430.05, i++, -8.274);
	AddWall(10, 2, 1, 392.54, 1, 428.63, i++, -8.274);
	AddWall(10, 2, 1, 382.7, 1, 427.16, i++, -8.274);
	AddWall(10, 2, 1, 372.81, 1, 425.71, i++, -8.274);
	AddWall(10, 2, 1, 363.07, 1, 424.1, i++, -8.274);
	AddWall(10, 2, 1, 353.29, 1, 422.25, i++, -13.938);
	AddWall(10, 2, 1, 349.53, 1, 420.09, i++, -12.798);
	AddWall(10, 2, 1, 333.93, 1, 417.14, i++, -20.969);
	AddWall(10, 2, 1, 325.54, 1, 411.96, i++, -42.274);
	AddWall(10, 2, 1, 319.21, 1, 404.05, i++, -60.587);
	AddWall(10, 2, 1, 314.63, 1, 395.06, i++, -63.916);
	AddWall(10, 2, 1, 311.7, 1, 385.38, i++, -81.158);
	AddWall(10, 2, 1, 311.33, 1, 375.44, i++, -92.052);
	AddWall(10, 2, 1, 311.47, 1, 365.35, i++, -90.938);
	AddWall(10, 2, 1, 311.92, 1, 355.33, i++, -91.627);
	AddWall(10, 2, 1, 311.04, 1, 345.44, i++, -78.575);
	AddWall(10, 2, 1, 308.61, 1, 335.92, i++, -72.827);
	AddWall(10, 2, 1, 304.63, 1, 326.82, i++, -59.683);
	AddWall(10, 2, 1, 299.63, 1, 318.27, i++, -59.115);
	AddWall(10, 2, 1, 293.81, 1, 310.21, i++, -48.945);
	AddWall(10, 2, 1, 286.92, 1, 303.41, i++, -41.106);
	AddWall(10, 2, 1, 279.35, 1, 296.99, i++, -41.106);
	AddWall(10, 2, 1, 271.63, 1, 290.62, i++, -41.106);
	AddWall(10, 2, 1, 264, 1, 284.15, i++, -41.106);
	AddWall(10, 2, 1, 256.29, 1, 277.8, i++, -41.106);
	AddWall(10, 2, 1, 248.49, 1, 271.55, i++, -41.106);
	AddWall(10, 2, 1, 240.69, 1, 265.29, i++, -41.106);
	AddWall(10, 2, 1, 232.89, 1, 259.03, i++, -41.106);
	AddWall(10, 2, 1, 225.32, 1, 252.52, i++, -41.106);
	AddWall(10, 2, 1, 217.51, 1, 246.56, i++, -41.106);
	AddWall(10, 2, 1, 209.61, 1, 240.47, i++, -41.106);
	AddWall(10, 2, 1, 200.28, 1, 236.56, i++, -10.273);
	AddWall(10, 2, 1, 190.35, 1, 236.99, i++, 14.01);
	AddWall(10, 2, 1, 181.06, 1, 240.78, i++, 30.657);
	AddWall(10, 2, 1, 174.4, 1, 247.98, i++, 62.999);
	AddWall(10, 2, 1, 173.51, 1, 257.57, i++, -61.39);
	AddWall(10, 2, 1, 177.37, 1, 266.91, i++, -61.294);
	AddWall(10, 2, 1, 184.28, 1, 274.97, i++, -40.28);
	AddWall(10, 2, 1, 192.61, 1, 281.4, i++, -39.615);
	AddWall(10, 2, 1, 200.42, 1, 287.66, i++, -39.615);
	AddWall(10, 2, 1, 207.99, 1, 293.88, i++, -39.615);
	AddWall(10, 2, 1, 215.79, 1, 300.13, i++, -39.615);
	AddWall(10, 2, 1, 223.59, 1, 306.39, i++, -39.615);
	AddWall(10, 2, 1, 231.39, 1, 312.65, i++, -39.615);
	AddWall(10, 2, 1, 239.1, 1, 319, i++, -39.615);
	AddWall(10, 2, 1, 246.73, 1, 325.46, i++, -39.615);
	AddWall(10, 2, 1, 254.01, 1, 332.38, i++, -48.759);
	AddWall(10, 2, 1, 260.37, 1, 340.33, i++, -53.818);
	AddWall(10, 2, 1, 265.04, 1, 349.3, i++, -71.447);
	AddWall(10, 2, 1, 267.27, 1, 358.95, i++, -83.691);
	AddWall(10, 2, 1, 267.7, 1, 368.93, i++, -91.768);
	AddWall(10, 2, 1, 265.81, 1, 378.49, i++, -111.101);
	AddWall(10, 2, 1, 261.62, 1, 387.66, i++, -118.699);
	AddWall(10, 2, 1, 255.44, 1, 395.47, i++, -138.444);
	AddWall(10, 2, 1, 247.18, 1, 401.22, i++, -151.515);
	AddWall(10, 2, 1, 237.85, 1, 404.64, i++, 13.233);
	AddWall(10, 2, 1, 227.85, 1, 405.65, i++, -1);
	AddWall(10, 2, 1, 217.9, 1, 404.87, i++, -8.653);
	AddWall(10, 2, 1, 208.01, 1, 403.42, i++, -8.653);
	AddWall(10, 2, 1, 198.27, 1, 401.82, i++, -8.653);
	AddWall(10, 2, 1, 188.44, 1, 400.4, i++, -8.653);
	AddWall(10, 2, 1, 178.66, 1, 398.98, i++, -8.653);
	AddWall(10, 2, 1, 168.77, 1, 397.55, i++, -8.653);
	AddWall(10, 2, 1, 158.92, 1, 396.08, i++, -8.653);
	AddWall(10, 2, 1, 149.03, 1, 394.64, i++, -8.653);
	AddWall(10, 2, 1, 139.29, 1, 393.03, i++, -8.653);
	AddWall(10, 2, 1, 129.27, 1, 391.06, i++, -8.653);
	AddWall(10, 2, 1, 119.57, 1, 389.2, i++, -8.653);
	AddWall(10, 2, 1, 109.71, 1, 387.34, i++, -8.653);
	AddWall(10, 2, 1, 99.98, 1, 385.44, i++, -8.653);
	AddWall(10, 2, 1, 90.16, 1, 383.56, i++, -8.653);
	AddWall(10, 2, 1, 80.5, 1, 381.53, i++, -8.653);
	AddWall(10, 2, 1, 70.87, 1, 378.66, i++, -20.874);
	AddWall(10, 2, 1, 61.76, 1, 374.56, i++, -26.869);
	AddWall(10, 2, 1, 53.08, 1, 369.52, i++, -33.402);
	AddWall(10, 2, 1, 45.19, 1, 363.52, i++, -41.597);
	AddWall(10, 2, 1, 38.51, 1, 356.05, i++, -57.418);
	AddWall(10, 2, 1, 34.05, 1, 347.09, i++, -68.124);
	AddWall(10, 2, 1, 31.25, 1, 337.44, i++, -77.125);
	AddWall(10, 2, 1, 29.92, 1, 327.62, i++, -84.778);
	AddWall(10, 2, 1, 29.82, 1, 317.67, i++, 85.33);
	AddWall(10, 2, 1, 31.74, 1, 307.85, i++, 72.61);
	AddWall(10, 2, 1, 35.3, 1, 298.46, i++, 64.699);
	AddWall(10, 2, 1, 38.76, 1, 289.28, i++, 75.443);
	AddWall(10, 2, 1, 41.25, 1, 279.35, i++, 75.899);
	AddWall(10, 2, 1, 42.93, 1, 269.7, i++, 84.844);
	AddWall(10, 2, 1, 43.83, 1, 259.65, i++, 84.377);
	AddWall(10, 2, 1, 44.12, 1, 249.85, i++, 93.786);
	AddWall(10, 2, 1, 43.25, 1, 239.65, i++, 95.54);
	AddWall(10, 2, 1, 41.7, 1, 229.97, i++, -75.714);
	AddWall(10, 2, 1, 39.15, 1, 220.43, i++, -78.708);
	AddWall(10, 2, 1, 36.76, 1, 210.93, i++, -70.799);
	AddWall(10, 2, 1, 32.77, 1, 201.55, i++, -63.997);
	AddWall(10, 2, 1, 27.48, 1, 193.46, i++, -48.519);
	AddWall(10, 2, 1, 20.71, 1, 186.34, i++, -44.208);
	AddWall(10, 2, 1, 13.61, 1, 179.6, i++, -44.208);
	//interns 
	AddWall(10, 2, 1, 107.8, 1, 28.19, i++, 7.326);
	AddWall(10, 2, 1, 117.78, 1, 27.64, i++);
	AddWall(10, 2, 1, 127.78, 1, 27.64, i++);
	AddWall(10, 2, 1, 137.78, 1, 27.64, i++);
	AddWall(10, 2, 1, 147.78, 1, 27.64, i++);
	AddWall(10, 2, 1, 157.78, 1, 27.64, i++);
	AddWall(10, 2, 1, 167.78, 1, 27.64, i++);
	AddWall(10, 2, 1, 177.78, 1, 27.64, i++);
	AddWall(10, 2, 1, 187.78, 1, 27.64, i++);
	AddWall(10, 2, 1, 197.78, 1, 27.64, i++);
	AddWall(10, 2, 1, 207.78, 1, 27.64, i++);
	AddWall(10, 2, 1, 207.78, 1, 27.64, i++);
	AddWall(10, 2, 1, 217.78, 1, 27.64, i++);
	AddWall(10, 2, 1, 227.78, 1, 27.64, i++);
	AddWall(10, 2, 1, 237.78, 1, 27.64, i++);
	AddWall(10, 2, 1, 247.78, 1, 27.64, i++);
	AddWall(10, 2, 1, 257.78, 1, 27.64, i++);
	AddWall(10, 2, 1, 267.78, 1, 27.64, i++);
	AddWall(10, 2, 1, 277.78, 1, 27.64, i++);
	AddWall(10, 2, 1, 287.78, 1, 27.64, i++);
	AddWall(10, 2, 1, 297.78, 1, 27.64, i++);
	AddWall(10, 2, 1, 307.78, 1, 27.64, i++);
	AddWall(10, 2, 1, 317.78, 1, 27.64, i++);
	AddWall(10, 2, 1, 327.78, 1, 27.64, i++);
	AddWall(10, 2, 1, 337.78, 1, 27.64, i++);
	AddWall(10, 2, 1, 347.78, 1, 27.64, i++);
	AddWall(10, 2, 1, 357.78, 1, 27.64, i++);
	AddWall(10, 2, 1, 367.78, 1, 27.64, i++);
	AddWall(10, 2, 1, 377.78, 1, 27.64, i++);
	AddWall(10, 2, 1, 387.78, 1, 27.64, i++);
	AddWall(10, 2, 1, 397.78, 1, 27.64, i++);
	AddWall(10, 2, 1, 407.78, 1, 27.64, i++);
	AddWall(10, 2, 1, 417.78, 1, 27.64, i++);
	AddWall(10, 2, 1, 427.78, 1, 27.64, i++);
	AddWall(10, 2, 1, 437.78, 1, 27.64, i++);
	AddWall(10, 2, 1, 446.78, 1, 27.64, i++);
	AddWall(10, 2, 1, 456.78, 1, 27.64, i++);
	AddWall(10, 2, 1, 466.78, 1, 27.64, i++);
	AddWall(10, 2, 1, 476.78, 1, 27.64, i++);
	AddWall(10, 2, 1, 486.78, 1, 27.64, i++);
	AddWall(10, 2, 1, 496.78, 1, 27.64, i++);
	AddWall(10, 2, 1, 506.53, 1, 27.9, i++, -3.073);
	AddWall(10, 2, 1, 516.25, 1, 28.63, i++, -6.299);
	AddWall(10, 2, 1, 526, 1, 29.58, i++, -6.03);
	AddWall(10, 2, 1, 535.95, 1, 30.55, i++, -6.015);
	AddWall(10, 2, 1, 545.9, 1, 31.53, i++, -5.918);
	AddWall(10, 2, 1, 555.86, 1, 32.5, i++, -6.608);
	AddWall(10, 2, 1, 564.59, 1, 36.61, i++, -48.14);
	AddWall(10, 2, 1, 566.9, 1, 45.6, i++, 75.91);
	AddWall(10, 2, 1, 562.17, 1, 53.55, i++, 46.532);
	AddWall(10, 2, 1, 553.89, 1, 59.1, i++, 19.866);
	AddWall(10, 2, 1, 545.08, 1, 62.61, i++, 20.123);
	AddWall(10, 2, 1, 535.76, 1, 66.34, i++, 21.674);
	AddWall(10, 2, 1, 526.95, 1, 70.73, i++, 30.964);
	AddWall(10, 2, 1, 519.33, 1, 76.61, i++, 39.514);
	AddWall(10, 2, 1, 512.1, 1, 83.5, i++, 45.31);
	AddWall(10, 2, 1, 506.13, 1, 91.04, i++, 54.648);
	AddWall(10, 2, 1, 501.44, 1, 98.94, i++, 63.979);
	AddWall(10, 2, 1, 498.27, 1, 108.02, i++, 72.745);
	AddWall(10, 2, 1, 495.61, 1, 117.14, i++, 74.105);
	AddWall(10, 2, 1, 493.99, 1, 126.62, i++, 82.521);
	AddWall(10, 2, 1, 492.464, 1, 136.075, i++, 79.746);
	AddWall(10, 2, 1, 491.09, 1, 146.07, i++, 81.158);
	AddWall(10, 2, 1, 489.38, 1, 156.04, i++, 79.453);
	AddWall(10, 2, 1, 488, 1, 166.04, i++, 80.74);
	AddWall(10, 2, 1, 486.21, 1, 176.07, i++, 80.74);
	AddWall(10, 2, 1, 484.83, 1, 186.07, i++, 82.34);
	AddWall(10, 2, 1, 483.12, 1, 196.03, i++, 79.089);
	AddWall(10, 2, 1, 481.74, 1, 206.03, i++, 81.488);
	AddWall(10, 2, 1, 478.6, 1, 215.73, i++, 62.241);
	AddWall(10, 2, 1, 472.9, 1, 216.25, i++, -43.025);
	AddWall(10, 2, 1, 467.09, 1, 208.21, i++, -66.329);
	AddWall(10, 2, 1, 464.01, 1, 198.36, i++, -77.569);
	AddWall(10, 2, 1, 462.24, 1, 188.53, i++, -81.521);
	AddWall(10, 2, 1, 460.24, 1, 178.99, i++, -75.719);
	AddWall(10, 2, 1, 457.93, 1, 169.32, i++, -76.752);
	AddWall(10, 2, 1, 455.1, 1, 159.87, i++, -71.346);
	AddWall(10, 2, 1, 451.36, 1, 150.74, i++, -65.688);
	AddWall(10, 2, 1, 446.39, 1, 142.02, i++, -56.179);
	AddWall(10, 2, 1, 440.92, 1, 133.72, i++, -57.08);
	AddWall(10, 2, 1, 435.04, 1, 125.79, i++, -50.45);
	AddWall(10, 2, 1, 428.42, 1, 118.48, i++, -45.458);
	AddWall(10, 2, 1, 421.13, 1, 111.67, i++, -41.646);
	AddWall(10, 2, 1, 413.82, 1, 105.08, i++, -43.716);
	AddWall(10, 2, 1, 406.33, 1, 98.65, i++, -37.84);
	AddWall(10, 2, 1, 398.27, 1, 93.11, i++, -32.469);
	AddWall(10, 2, 1, 389.72, 1, 88.7, i++, -24.052);
	AddWall(10, 2, 1, 380.66, 1, 84.59, i++, -24.669);
	AddWall(10, 2, 1, 371.44, 1, 80.88, i++, -17.953);
	AddWall(10, 2, 1, 361.94, 1, 77.88, i++, -16.632);
	AddWall(10, 2, 1, 352.44, 1, 75.3, i++, -13.216);
	AddWall(10, 2, 1, 342.63, 1, 73.25, i++, -11.31);
	AddWall(10, 2, 1, 333.02, 1, 71.63, i++, -5.852);
	AddWall(10, 2, 1, 323.1, 1, 70.74, i++, -4.554);
	AddWall(10, 2, 1, 313.36, 1, 70.12, i++, -3.599);
	AddWall(10, 2, 1, 303.4, 1, 69.84, i++, -0.977);
	AddWall(10, 2, 1, 293.38, 1, 69.9, i++);
	AddWall(10, 2, 1, 283.38, 1, 70.22, i++, 1.757);
	AddWall(10, 2, 1, 273.38, 1, 70.42, i++, 1.757);
	AddWall(10, 2, 1, 263.39, 1, 70.62, i++, 1.757);
	AddWall(10, 2, 1, 253.39, 1, 70.81, i++, 1.757);
	AddWall(10, 2, 1, 243.39, 1, 71.01, i++, 1.757);
	AddWall(10, 2, 1, 233.39, 1, 71.21, i++, 1.757);
	AddWall(10, 2, 1, 223.6, 1, 71.4, i++, 1.757);
	AddWall(10, 2, 1, 213.6, 1, 71.6, i++, 1.757);
	AddWall(10, 2, 1, 203.59, 1, 71.65, i++, 1.757);
	AddWall(10, 2, 1, 193.59, 1, 71.76, i++, 1.757);
	AddWall(10, 2, 1, 183.59, 1, 71.87, i++, 1.757);
	AddWall(10, 2, 1, 173.58, 1, 72.14, i++, 1.757);
	AddWall(10, 2, 1, 163.58, 1, 72.25, i++, 1.757);
	AddWall(10, 2, 1, 153.58, 1, 72.64, i++, 1.757);
	AddWall(10, 2, 1, 143.58, 1, 72.75, i++, 1.757);
	AddWall(10, 2, 1, 133.59, 1, 74.04, i++, 15.424);
	AddWall(10, 2, 1, 124.31, 1, 77.88, i++, 29.942);
	AddWall(10, 2, 1, 116.58, 1, 83.5, i++, 43.388);
	AddWall(10, 2, 1, 110.37, 1, 91.38, i++, 59.514);
	AddWall(10, 2, 1, 106.06, 1, 99.63, i++, 64.798);
	AddWall(10, 2, 1, 103.19, 1, 109.26, i++, 81.745);
	AddWall(10, 2, 1, 102.68, 1, 118.96, i++, 90);
	AddWall(10, 2, 1, 104.02, 1, 128.91, i++, -74.055);
	AddWall(10, 2, 1, 107.46, 1, 138.46, i++, -68.057);
	AddWall(10, 2, 1, 112.38, 1, 147.21, i++, -53.111);
	AddWall(10, 2, 1, 118.67, 1, 154.6, i++, -45.397);
	AddWall(10, 2, 1, 126.61, 1, 160.76, i++, -30.442);
	AddWall(10, 2, 1, 135.24, 1, 164.88, i++, -18.067);
	AddWall(10, 2, 1, 145.09, 1, 166.8, i++, -2.8);
	AddWall(10, 2, 1, 155.14, 1, 166.72, i++, 5.172);
	AddWall(10, 2, 1, 165, 1, 166.05, i++, 2.268);
	AddWall(10, 2, 1, 174.98, 1, 165.74, i++, 1.081);
	AddWall(10, 2, 1, 185.01, 1, 165.37, i++, 1.081);
	AddWall(10, 2, 1, 195, 1, 165.17, i++, -1.175);
	AddWall(10, 2, 1, 205.07, 1, 165.98, i++, -9.34);
	AddWall(10, 2, 1, 214.84, 1, 167.91, i++, 166.357);
	AddWall(10, 2, 1, 224.08, 1, 170.71, i++, -21.43);
	AddWall(10, 2, 1, 233.21, 1, 174.78, i++, -26.046);
	AddWall(10, 2, 1, 241.98, 1, 179, i++, -34.854);
	AddWall(10, 2, 1, 250.03, 1, 185.72, i++, -39.149);
	AddWall(10, 2, 1, 257.86, 1, 191.87, i++, -38.077);
	AddWall(10, 2, 1, 265.51, 1, 198.3, i++, -41.188);
	AddWall(10, 2, 1, 273.04, 1, 204.76, i++, -41.188);
	AddWall(10, 2, 1, 280.74, 1, 211.14, i++, -41.188);
	AddWall(10, 2, 1, 288.44, 1, 217.53, i++, -41.188);
	AddWall(10, 2, 1, 296.14, 1, 223.91, i++, -41.188);
	AddWall(10, 2, 1, 303.84, 1, 230.29, i++, -41.188);
	AddWall(10, 2, 1, 311.38, 1, 236.54, i++, -41.188);
	AddWall(10, 2, 1, 319.07, 1, 242.92, i++, -41.188);
	AddWall(10, 2, 1, 326.77, 1, 249.3, i++, -41.188);
	AddWall(10, 2, 1, 334.47, 1, 255.69, i++, -41.188);
	AddWall(10, 2, 1, 342.17, 1, 262.07, i++, -41.188);
	AddWall(10, 2, 1, 349.87, 1, 268.45, i++, -41.188);
	AddWall(10, 2, 1, 357.33, 1, 274.88, i++, -41.188);
	AddWall(10, 2, 1, 364.91, 1, 281.3, i++, -41.188);
	AddWall(10, 2, 1, 372.31, 1, 287.83, i++, -41.188);
	AddWall(10, 2, 1, 379.93, 1, 294.31, i++, -41.188);
	AddWall(10, 2, 1, 387.55, 1, 300.79, i++, -41.188);
	AddWall(10, 2, 1, 395.16, 1, 307.27, i++, -41.188);
	AddWall(10, 2, 1, 402.62, 1, 313.61, i++, -41.188);
	AddWall(10, 2, 1, 410.24, 1, 320.09, i++, -41.188);
	AddWall(10, 2, 1, 417.86, 1, 326.57, i++, -41.188);
	AddWall(10, 2, 1, 425.48, 1, 333.04, i++, -41.188);
	AddWall(10, 2, 1, 433.09, 1, 339.52, i++, -41.188);
	AddWall(10, 2, 1, 440.71, 1, 346, i++, -41.188);
	AddWall(10, 2, 1, 448.42, 1, 352.38, i++, -41.188);
	AddWall(10, 2, 1, 455.98, 1, 358.82, i++, -41.188);
	AddWall(10, 2, 1, 463.51, 1, 365.45, i++, -41.188);
	AddWall(10, 2, 1, 470.63, 1, 372.13, i++, -46.989);
	AddWall(10, 2, 1, 475.78, 1, 380.74, i++, -71.323);
	AddWall(10, 2, 1, 476.81, 1, 389.9, i++, -96.21);
	AddWall(10, 2, 1, 473.09, 1, 399.1, i++, 51.844);
	AddWall(10, 2, 1, 465.9, 1, 406.05, i++, 35.893);
	AddWall(10, 2, 1, 456.59, 1, 409.49, i++, 4.16);
	AddWall(10, 2, 1, 446.32, 1, 410.16, i++, -2.476);
	AddWall(10, 2, 1, 436.25, 1, 409.66, i++, -7.319);
	AddWall(10, 2, 1, 426.88, 1, 408.32, i++, -8.565);
	AddWall(10, 2, 1, 416.97, 1, 406.98, i++, -8.565);
	AddWall(10, 2, 1, 407.12, 1, 405.59, i++, -8.565);
	AddWall(10, 2, 1, 397.21, 1, 404.23, i++, -8.565);
	AddWall(10, 2, 1, 387.46, 1, 402.71, i++, -8.565);
	AddWall(10, 2, 1, 377.42, 1, 401.18, i++, -8.565);
	AddWall(10, 2, 1, 367.66, 1, 399.66, i++, -8.565);
	AddWall(10, 2, 1, 358.17, 1, 398.26, i++, -8.565);
	AddWall(10, 2, 1, 348.72, 1, 395.26, i++, -26.868);
	AddWall(10, 2, 1, 341.55, 1, 388.3, i++, -64.716);
	AddWall(10, 2, 1, 338.88, 1, 378.75, i++, -82.157);
	AddWall(10, 2, 1, 338.55, 1, 369.19, i++, -92.181);
	AddWall(10, 2, 1, 338.63, 1, 359.37, i++, -87.845);
	AddWall(10, 2, 1, 338.13, 1, 349.71, i++, -88.329);
	AddWall(10, 2, 1, 337.25, 1, 339.94, i++, -82.093);
	AddWall(10, 2, 1, 334.78, 1, 330.32, i++, -68.593);
	AddWall(10, 2, 1, 331.21, 1, 321.07, i++, -70.02);
	AddWall(10, 2, 1, 327.14, 1, 312.64, i++, -60.866);
	AddWall(10, 2, 1, 322.14, 1, 304.08, i++, -60.027);
	AddWall(10, 2, 1, 316.33, 1, 296.03, i++, -47.395);
	AddWall(10, 2, 1, 309.44, 1, 289.22, i++, -41.845);
	AddWall(10, 2, 1, 301.93, 1, 283.14, i++, -42.788);
	AddWall(10, 2, 1, 294.22, 1, 276.78, i++, -40.354);
	AddWall(10, 2, 1, 286.59, 1, 270.31, i++, -40.354);
	AddWall(10, 2, 1, 278.88, 1, 263.96, i++, -40.354);
	AddWall(10, 2, 1, 271.08, 1, 257.7, i++, -40.354);
	AddWall(10, 2, 1, 263.28, 1, 215.45, i++, -40.354);
	AddWall(10, 2, 1, 255.48, 1, 245.19, i++, -40.354);
	AddWall(10, 2, 1, 247.9, 1, 238.97, i++, -40.354);
	AddWall(10, 2, 1, 240.1, 1, 232.72, i++, -40.354);
	AddWall(10, 2, 1, 232.19, 1, 226.63, i++, -40.354);
	AddWall(10, 2, 1, 224.46, 1, 220.5, i++, -40.354);
	AddWall(10, 2, 1, 216.56, 1, 214.41, i++, -40.354);
	AddWall(10, 2, 1, 208.27, 1, 208.97, i++, -30.7);
	AddWall(10, 2, 1, 199.09, 1, 205.55, i++, -8.778);
	AddWall(10, 2, 1, 189.11, 1, 204.21, i++, -7.235);
	AddWall(10, 2, 1, 179.34, 1, 204.64, i++, 13.848);
	AddWall(10, 2, 1, 169.72, 1, 207.11, i++, 15.068);
	AddWall(10, 2, 1, 160.89, 1, 211.34, i++, 36.719);
	AddWall(10, 2, 1, 153.11, 1, 217.19, i++, 36.458);
	AddWall(10, 2, 1, 146.42, 1, 224.33, i++, 57.76);
	AddWall(10, 2, 1, 141.37, 1, 232.66, i++, 63.17);
	AddWall(10, 2, 1, 138.45, 1, 242, i++, 83.938);
	AddWall(10, 2, 1, 137.77, 1, 252.02, i++, 89.3);
	AddWall(10, 2, 1, 139.47, 1, 261.66, i++, -68.918);
	AddWall(10, 2, 1, 143.05, 1, 270.96, i++, -67.677);
	AddWall(10, 2, 1, 148.22, 1, 279.27, i++, -46.415);
	AddWall(10, 2, 1, 155.67, 1, 285.83, i++, -39.33);
	AddWall(10, 2, 1, 163.47, 1, 292.08, i++, -39.33);
	AddWall(10, 2, 1, 171.05, 1, 298.3, i++, -39.33);
	AddWall(10, 2, 1, 178.85, 1, 304.56, i++, -39.33);
	AddWall(10, 2, 1, 186.65, 1, 310.81, i++, -39.33);
	AddWall(10, 2, 1, 194.45, 1, 317.07, i++, -39.33);
	AddWall(10, 2, 1, 202.16, 1, 323.42, i++, -39.33);
	AddWall(10, 2, 1, 209.79, 1, 329.89, i++, -39.33);
	AddWall(10, 2, 1, 217.29, 1, 335.85, i++, -39.33);
	AddWall(10, 2, 1, 225.09, 1, 342.11, i++, -39.33);
	AddWall(10, 2, 1, 232.33, 1, 348.96, i++, -47.929);
	AddWall(10, 2, 1, 237.95, 1, 357.29, i++, -63.642);
	AddWall(10, 2, 1, 239.77, 1, 367.07, i++, -92.265);
	AddWall(10, 2, 1, 237.05, 1, 376.51, i++, 59.649);
	AddWall(10, 2, 1, 229.56, 1, 382.31, i++, 15.546);
	AddWall(10, 2, 1, 219.69, 1, 383.28, i++, -5.787);
	AddWall(10, 2, 1, 209.66, 1, 382.14, i++, -8.868);
	AddWall(10, 2, 1, 199.88, 1, 380.72, i++, -8.868);
	AddWall(10, 2, 1, 189.99, 1, 379.29, i++, -8.868);
	AddWall(10, 2, 1, 180.14, 1, 377.82, i++, -8.868);
	AddWall(10, 2, 1, 170.25, 1, 376.38, i++, -8.868);
	AddWall(10, 2, 1, 160.51, 1, 374.77, i++, -8.868);
	AddWall(10, 2, 1, 150.49, 1, 372.8, i++, -8.868);
	AddWall(10, 2, 1, 140.79, 1, 370.95, i++, -8.868);
	AddWall(10, 2, 1, 130.96, 1, 369.09, i++, -8.868);
	AddWall(10, 2, 1, 121.2, 1, 367.18, i++, -8.868);
	AddWall(10, 2, 1, 111.38, 1, 365.3, i++, -8.868);
	AddWall(10, 2, 1, 101.76, 1, 363.57, i++, -8.868);
	AddWall(10, 2, 1, 92.13, 1, 360.7, i++, -21.448);
	AddWall(10, 2, 1, 83.02, 1, 356.61, i++, -27.349);
	AddWall(10, 2, 1, 74.34, 1, 351.56, i++, -33.61);
	AddWall(10, 2, 1, 66.78, 1, 344.95, i++, -48.899);
	AddWall(10, 2, 1, 61.67, 1, 336.22, i++, -69.326);
	AddWall(10, 2, 1, 59.63, 1, 326.51, i++, -83.196);
	AddWall(10, 2, 1, 59.04, 1, 316.62, i++, -90.212);
	AddWall(10, 2, 1, 60.29, 1, 306.77, i++, 76.122);
	AddWall(10, 2, 1, 63.58, 1, 297.01, i++, 66.146);
	AddWall(10, 2, 1, 66.68, 1, 287.71, i++, 77.314);
	AddWall(10, 2, 1, 69.07, 1, 277.91, i++, 75.213);
	AddWall(10, 2, 1, 70.82, 1, 268.26, i++, 85.314);
	AddWall(10, 2, 1, 71.48, 1, 258.05, i++, 86.491);
	AddWall(10, 2, 1, 71.4, 1, 248.25, i++, 95.809);
	AddWall(10, 2, 1, 70.32, 1, 238.49, i++, 95.891);
	AddWall(10, 2, 1, 68.16, 1, 228.65, i++, -74.45);
	AddWall(10, 2, 1, 65.63, 1, 219.16, i++, -74.999);
	AddWall(10, 2, 1, 62.88, 1, 209.23, i++, -75.086);
	AddWall(10, 2, 1, 60.99, 1, 199.56, i++, -83.74);
	AddWall(10, 2, 1, 59.54, 1, 189.58, i++, -82.294);
	AddWall(10, 2, 1, 59.17, 1, 179.45, i++, 87.398);
	AddWall(10, 2, 1, 59.73, 1, 169.32, i++, 86.446);
	AddWall(10, 2, 1, 59.71, 1, 159.66, i++, 88.383);
	AddWall(10, 2, 1, 60.14, 1, 149.61, i++, 87.379);
	AddWall(10, 2, 1, 60.59, 1, 139.83, i++, 87.151);
	AddWall(10, 2, 1, 60.99, 1, 129.83, i++, 87.151);
	AddWall(10, 2, 1, 60.43, 1, 120.05, i++, 87.151);
	AddWall(10, 2, 1, 61.87, 1, 110, i++, 87.151);
	AddWall(10, 2, 1, 62.31, 1, 100.22, i++, 87.151);
	AddWall(10, 2, 1, 62.71, 1, 90.23, i++, 87.151);
	AddWall(10, 2, 1, 63.16, 1, 80.45, i++, 87.151);
	AddWall(10, 2, 1, 64.51, 1, 70.41, i++, 79.118);
	AddWall(10, 2, 1, 66.28, 1, 62.21, i++, 76.657);
	AddWall(10, 2, 1, 69.13, 1, 54.33, i++, 62.147);
	AddWall(10, 2, 1, 74.43, 1, 46.04, i++, 52.829);
	AddWall(10, 2, 1, 81.19, 1, 39.23, i++, 38.244);
	AddWall(10, 2, 1, 89.28, 1, 33.63, i++, 30.819);
	AddWall(10, 2, 1, 98.13, 1, 29.98, i++, 14.61);


	//int left
	AddWall(10, 2, 1, 577.83, 1, 80.26, i++, -7.883);
	AddWall(10, 2, 1, 586.94, 1, 83.81, i++, -36.599);
	AddWall(10, 2, 1, 594.53, 1, 90.54, i++, -47.88);
	AddWall(10, 2, 1, 601.21, 1, 98.05, i++, -50.092);
	AddWall(10, 2, 1, 607.67, 1, 105.77, i++, -49.962);
	AddWall(10, 2, 1, 614.21, 1, 113.05, i++, -49.642);
	AddWall(10, 2, 1, 620.65, 1, 120.23, i++, -48.165);
	AddWall(10, 2, 1, 627.11, 1, 127.57, i++, -49.303);
	AddWall(10, 2, 1, 634.41, 1, 135.27, i++, -48.708);
	AddWall(10, 2, 1, 640.95, 1, 142.55, i++, -45.785);
	AddWall(10, 2, 1, 647.8, 1, 148.8, i++, -39.424);
	AddWall(10, 2, 1, 655.48, 1, 154.87, i++, -39.164);
	AddWall(10, 2, 1, 663.81, 1, 160.57, i++, -29.085);
	AddWall(10, 2, 1, 672.53, 1, 165.24, i++, -27.044);
	AddWall(10, 2, 1, 681.93, 1, 169.06, i++, -17.986);
	AddWall(10, 2, 1, 691.32, 1, 171.81, i++, -17.57);
	AddWall(10, 2, 1, 701.09, 1, 173.88, i++, -6.969);
	AddWall(10, 2, 1, 710.83, 1, 174.88, i++, -6.553);
	AddWall(10, 2, 1, 720.75, 1, 176.09, i++, -6.95);
	AddWall(10, 2, 1, 730.8, 1, 177.49, i++, -6.95);
	AddWall(10, 2, 1, 740.73, 1, 178.7, i++, -6.95);
	AddWall(10, 2, 1, 750.51, 1, 179.79, i++, -6.95);
	AddWall(10, 2, 1, 760.37, 1, 181.66, i++, -15.945);
	AddWall(10, 2, 1, 768.46, 1, 186.43, i++, -44.304);
	AddWall(10, 2, 1, 771.77, 1, 195.22, i++, 83.986);
	AddWall(10, 2, 1, 767.78, 1, 204.34, i++, 46.824);
	AddWall(10, 2, 1, 759.05, 1, 208.15, i++);
	AddWall(10, 2, 1, 749.02, 1, 207.19, i++, -9.224);
	AddWall(10, 2, 1, 739.13, 1, 205.71, i++, -9.224);
	AddWall(10, 2, 1, 729.09, 1, 204.12, i++, -9.224);
	AddWall(10, 2, 1, 719.19, 1, 202.64, i++, -9.224);
	AddWall(10, 2, 1, 709.21, 1, 200.8, i++, -9.224);
	AddWall(10, 2, 1, 699.31, 1, 199.32, i++, -9.224);
	AddWall(10, 2, 1, 689.45, 1, 197.57, i++, -9.224);
	AddWall(10, 2, 1, 679.6, 1, 196.3, i++, -9.224);
	AddWall(10, 2, 1, 669.74, 1, 194.56, i++, -9.224);
	AddWall(10, 2, 1, 659.84, 1, 193.08, i++, -9.224);
	AddWall(10, 2, 1, 649.87, 1, 191.35, i++, -9.224);
	AddWall(10, 2, 1, 639.97, 1, 189.87, i++, -9.224);
	AddWall(10, 2, 1, 629.95, 1, 189.25, i++, 0.188);
	AddWall(10, 2, 1, 619.93, 1, 190.19, i++, 11.124);
	AddWall(10, 2, 1, 610.23, 1, 192.94, i++, 19.758);
	AddWall(10, 2, 1, 601.06, 1, 197.08, i++, 30.198);
	AddWall(10, 2, 1, 594.5, 1, 203.8, i++, 62.058);
	AddWall(10, 2, 1, 590.45, 1, 213.01, i++, 72.329);
	AddWall(10, 2, 1, 587.75, 1, 218.19, i++, 54.293);
	AddWall(10, 2, 1, 580.5, 1, 222.58, i++, 10.281);
	AddWall(10, 2, 1, 570.52, 1, 223.73, i++, 3.039);
	AddWall(10, 2, 1, 560.59, 1, 224, i++, 6.978);
	AddWall(10, 2, 1, 550.75, 1, 226.16, i++, 10.713);
	AddWall(10, 2, 1, 540.88, 1, 227.96, i++, 9.111);
	AddWall(10, 2, 1, 531.13, 1, 230.02, i++, 13.716);
	AddWall(10, 2, 1, 521.48, 1, 232.32, i++, 13.039);
	AddWall(10, 2, 1, 514.31, 1, 229.32, i++, -54.52);
	AddWall(10, 2, 1, 511.46, 1, 222.07, i++, -83.059);
	AddWall(10, 2, 1, 510.12, 1, 212.05, i++, -81.504);
	AddWall(10, 2, 1, 510.21, 1, 202.09, i++, 81.663);
	AddWall(10, 2, 1, 511.51, 1, 192.07, i++, 83.894);
	AddWall(10, 2, 1, 512.49, 1, 182.05, i++, 81.11);
	AddWall(10, 2, 1, 513.79, 1, 172.03, i++, 84.06);
	AddWall(10, 2, 1, 514.77, 1, 161.98, i++, 84.06);
	AddWall(10, 2, 1, 514.77, 1, 161.98, i++, 84.06);
	AddWall(10, 2, 1, 516.07, 1, 151.96, i++, 84.06);
	AddWall(10, 2, 1, 517.05, 1, 141.91, i++, 84.06);
	AddWall(10, 2, 1, 518.36, 1, 131.89, i++, 84.06);
	AddWall(10, 2, 1, 519.24, 1, 122.1, i++, 84.06);
	AddWall(10, 2, 1, 522.07, 1, 112.73, i++, 65.446);
	AddWall(10, 2, 1, 526.87, 1, 104.09, i++, 57.995);
	AddWall(10, 2, 1, 533.33, 1, 96.84, i++, 37.905);
	AddWall(10, 2, 1, 540.84, 1, 90.45, i++, 42.089);
	AddWall(10, 2, 1, 549.14, 1, 85.45, i++, 21.597);
	AddWall(10, 2, 1, 558.46, 1, 81.72, i++, 21.371);
	AddWall(10, 2, 1, 568.22, 1, 79.73, i++);
	AddWall(10, 2, 1, 678.18, 1, 134.03, i++, 20.08);
	AddWall(10, 2, 1, 687.54, 1, 132.77, i++, -7.054);
	AddWall(10, 2, 1, 697.57, 1, 134.38, i++, -10.008);
	AddWall(10, 2, 1, 707.49, 1, 135.89, i++, -6.082);
	AddWall(10, 2, 1, 717.53, 1, 137.05, i++, -6.287);
	AddWall(10, 2, 1, 727.52, 1, 137.88, i++, -2.169);
	AddWall(10, 2, 1, 737.62, 1, 138.02, i++, 2.045);
	AddWall(10, 2, 1, 747.62, 1, 137.78, i++, 1.9);
	AddWall(10, 2, 1, 757.64, 1, 137.63, i++, -2.203);
	AddWall(10, 2, 1, 767.64, 1, 137.9, i++, -2.36);
	AddWall(10, 2, 1, 777.66, 1, 138.48, i++, -5.711);
	AddWall(10, 2, 1, 787.58, 1, 139.43, i++, -5.673);
	AddWall(10, 2, 1, 797.55, 1, 140.54, i++, -6.34);
	AddWall(10, 2, 1, 807.49, 1, 141.54, i++, -5.18);
	AddWall(10, 2, 1, 817.43, 1, 143.12, i++, -11.646);
	AddWall(10, 2, 1, 826.3, 1, 147.97, i++, -43.655);
	AddWall(10, 2, 1, 832.14, 1, 156.12, i++, -65.587);
	AddWall(10, 2, 1, 835.79, 1, 165.12, i++, -68.908);
	AddWall(10, 2, 1, 838.24, 1, 175.02, i++, -82.828);
	AddWall(10, 2, 1, 839.07, 1, 184.96, i++, -85.462);
	AddWall(10, 2, 1, 839.02, 1, 195.26, i++, -94.434);
	AddWall(10, 2, 1, 837.82, 1, 204.9, i++, -97.869);
	AddWall(10, 2, 1, 835.78, 1, 215.03, i++, 75.425);
	AddWall(10, 2, 1, 832.8, 1, 224.36, i++, -108.96);
	AddWall(10, 2, 1, 828.77, 1, 233.57, i++, -118.449);
	AddWall(10, 2, 1, 822.87, 1, 241.6, i++, -131.847);
	AddWall(10, 2, 1, 815.02, 1, 247.2, i++, -158.559);
	AddWall(10, 2, 1, 805.23, 1, 249.61, i++, -173.761);
	AddWall(10, 2, 1, 795.19, 1, 250.08, i++, 178.46);
	AddWall(10, 2, 1, 785.02, 1, 249.51, i++, 174.496);
	AddWall(10, 2, 1, 775.04, 1, 248.31, i++, 171.927);
	AddWall(10, 2, 1, 765.14, 1, 246.9, i++, 171.927);
	AddWall(10, 2, 1, 755.24, 1, 245.5, i++, 171.927);
	AddWall(10, 2, 1, 745.34, 1, 244.09, i++, 171.927);
	AddWall(10, 2, 1, 735.84, 1, 242.9, i++, 171.927);
	AddWall(10, 2, 1, 725.94, 1, 241.49, i++, 171.927);
	AddWall(10, 2, 1, 716.04, 1, 240.01, i++, 171.927);
	AddWall(10, 2, 1, 706.16, 1, 238.46, i++, 171.927);
	AddWall(10, 2, 1, 696.55, 1, 236.71, i++, 171.927);
	AddWall(10, 2, 1, 696.55, 1, 236.71, i++, 171.927);
	AddWall(10, 2, 1, 686.67, 1, 235.16, i++, 171.927);
	AddWall(10, 2, 1, 676.79, 1, 233.6, i++, 171.927);
	AddWall(10, 2, 1, 666.91, 1, 232.05, i++, 171.927);
	AddWall(10, 2, 1, 657.68, 1, 230.72, i++, 171.927);
	AddWall(10, 2, 1, 647.8, 1, 229.16, i++, 171.927);
	AddWall(10, 2, 1, 637.92, 1, 227.61, i++, 171.927);
	AddWall(10, 2, 1, 628.04, 1, 226.06, i++, 171.927);
	AddWall(10, 2, 1, 618.06, 1, 223.88, i++, -14.519);
	AddWall(10, 2, 1, 615.25, 1, 217.14, i++, 75.214);
	AddWall(10, 2, 1, 621.94, 1, 210.74, i++, 11.615);
	AddWall(10, 2, 1, 631.97, 1, 209.8, i++, 0.339);
	AddWall(10, 2, 1, 642.1, 1, 210.66, i++, -9.223);
	AddWall(10, 2, 1, 651.99, 1, 212.14, i++, -7.449);
	AddWall(10, 2, 1, 661.96, 1, 213.87, i++, -8.98);
	AddWall(10, 2, 1, 671.86, 1, 215.35, i++, -8.98);
	AddWall(10, 2, 1, 681.72, 1, 217.1, i++, -9.04);
	AddWall(10, 2, 1, 691.62, 1, 218.58, i++, -9.462);
	AddWall(10, 2, 1, 701.6, 1, 220.42, i++, -7.729);
	AddWall(10, 2, 1, 711.5, 1, 221.9, i++, -7.477);
	AddWall(10, 2, 1, 721.54, 1, 223.49, i++, -7.477);
	AddWall(10, 2, 1, 731.43, 1, 224.97, i++, -7.477);
	AddWall(10, 2, 1, 741.26, 1, 226.59, i++, -7.477);
	AddWall(10, 2, 1, 751.44, 1, 227.55, i++, -2.561);
	AddWall(10, 2, 1, 761.43, 1, 227.24, i++, 8.829);
	AddWall(10, 2, 1, 771.04, 1, 223.78, i++, 28.113);
	AddWall(10, 2, 1, 779.78, 1, 218.85, i++, -150.9);
	AddWall(10, 2, 1, 787.6, 1, 212.29, i++, 47.314);
	AddWall(10, 2, 1, 792.95, 1, 204.36, i++, 65.772);
	AddWall(10, 2, 1, 794.59, 1, 194.34, i++, 92.2);
	AddWall(10, 2, 1, 793.2, 1, 184.58, i++, 104.218);
	AddWall(10, 2, 1, 788.44, 1, 175.62, i++, 129.325);
	AddWall(10, 2, 1, 781.47, 1, 168.37, i++, 141.462);
	AddWall(10, 2, 1, 772.3, 1, 164.02, i++, 166.527);
	AddWall(10, 2, 1, 762.5, 1, 162.3, i++, 173.302);
	AddWall(10, 2, 1, 752.57, 1, 161.08, i++, -6.969);
	AddWall(10, 2, 1, 742.52, 1, 159.69, i++, -6.969);
	AddWall(10, 2, 1, 732.6, 1, 158.48, i++, -6.969);
	AddWall(10, 2, 1, 722.86, 1, 157.48, i++, -6.969);
	AddWall(10, 2, 1, 712.94, 1, 156.26, i++, -6.969);
	AddWall(10, 2, 1, 703.31, 1, 154.55, i++, -13.41);
	AddWall(10, 2, 1, 693.56, 1, 151.89, i++, -16.094);
	AddWall(10, 2, 1, 685.35, 1, 147.11, i++, -42.723);
	AddWall(10, 2, 1, 678.15, 1, 140.02, i++, -45.16);

	AddWall(10, 2, 1, 32.96, 1, 169.32, i++, 87.402);
	AddWall(10, 2, 1, 33.4, 1, 159.54, i++, 87.402);
	AddWall(10, 2, 1, 33.8, 1, 149.55, i++, 87.402);
	AddWall(10, 2, 1, 34.25, 1, 139.77, i++, 87.402);
	AddWall(10, 2, 1, 34.68, 1, 129.71, i++, 87.402);
	AddWall(10, 2, 1, 35.13, 1, 119.93, i++, 87.402);
	AddWall(10, 2, 1, 35.53, 1, 109.93, i++, 87.402);
	AddWall(10, 2, 1, 35.98, 1, 100.15, i++, 87.402);
	AddWall(10, 2, 1, 36.41, 1, 90.11, i++, 87.402);
	AddWall(10, 2, 1, 36.85, 1, 80.32, i++, 87.402);
	AddWall(10, 2, 1, 37.26, 1, 70.33, i++, 87.402);
	AddWall(10, 2, 1, 37.7, 1, 60.55, i++, 87.402);
	AddWall(10, 2, 1, 39.05, 1, 50.51, i++, 79.393);
	AddWall(10, 2, 1, 42.07, 1, 41.14, i++, 65.705);

	AddWall(10, 2, 1, 37.26, 1, 39.07, i++, 22.648);
	AddWall(10, 2, 1, 28.05, 1, 42.89, i++, 22.562);
	AddWall(10, 2, 1, 18.82, 1, 46.74, i++, 22.893);
	AddWall(10, 2, 1, 11.54, 1, 52.84, i++, 50.994);
	AddWall(10, 2, 1, 8.12, 1, 62.02, i++, -92.298);
	AddWall(10, 2, 1, 7.67, 1, 71.8, i++, -92.298);
	AddWall(10, 2, 1, 7.37, 1, 81.14, i++, -92.298);
	AddWall(10, 2, 1, 6.93, 1, 90.92, i++, -92.298);
	AddWall(10, 2, 1, 6.49, 1, 100.96, i++, -92.298);
	AddWall(10, 2, 1, 6.05, 1, 110.74, i++, -92.298);
	AddWall(10, 2, 1, 5.65, 1, 120.74, i++, -92.298);
	AddWall(10, 2, 1, 5.2, 1, 130.52, i++, -92.298);
	AddWall(10, 2, 1, 4.77, 1, 140.58, i++, -92.298);
	AddWall(10, 2, 1, 8.1, 1, 149.58, i++, -46.454);
	AddWall(10, 2, 1, 14.81, 1, 156.7, i++, -46.454);
	AddWall(10, 2, 1, 21.72, 1, 163.94, i++, -46.454);
	AddWall(10, 2, 1, 28.44, 1, 171.06, i++, -46.454);

	AddBox(20.242, 20, 1, -39.46, 1, 53.82, Grey, 0);
	AddBox(20.242, 20, 1, -39.46, 1, 155.84, Grey, 0);
	AddBox(1.514, 20, 103.324, -48.82, 1, 104.63, Blue, 0);
	AddBox(1.514, 2, 103.324, -30.09, 12, 104.63, Grey, 0);
	AddBox(1.514, 20, 15.141, -30.09, 1, 148.79, Grey, 0);
	AddBox(1.514, 20, 34.4, -30.09, 1, 104.83, Grey, 0);
	AddBox(1.514, 20, 15.141, -30.09, 1, 60.87, Grey, 0);
	AddBox(22.634, 1, 112.538, -39.46, 12, 105.17, Grey, 0);
	AddBox(11.78, 2, 19.188, -24.07, 10, 78.04, Red, 0);
	AddBox(11.78, 2, 19.188, -24.07, 10, 131.63, Green, 0);
	AddBox(11.78, 0.1, 19.188, -24.07, 0.1, 78.04, Red, 0);
	AddBox(11.78, 0.1, 19.188, -24.07, 0.1, 131.63, Green, 0);//Fuel reload
	AddBox(5.268, 2, 266.833, -88.42, 1, 141.3, Grey, 0);
	AddBox(129.909, 2, 6.628, -21.68, 1, 271.58, Grey, 0);
	AddBox(149.412, 2, 0.962, -11.08, 1, 8.37, Grey, 0);
	AddBox(88.041, 2, 0.962, -42.07, 1, 36.63, Grey, 0);
	AddBox(35.011, 2, 2.315, -68.28, 1, 160.28, Grey, 0);
	AddBox(5.148, 2, 79.195, 12.39, 1, 235.83, Grey, 27.629);
	AddBox(18.449, 2, 1.694, -12.45, 1, 210.08, Grey, 0);
	AddBox(2.174, 2, 16.849, -22.77, 1, 217.66, Grey, 0);
	AddBox(2.174, 10, 16.849, -43.41, 1, 217.66, Grey, 0);
	AddBox(2.174, 10, 16.849, -64.88, 1, 217.66, Grey, 0);
	AddBox(61.404, 3, 2.725, -52.38, 7, 217.8, Grey, 0);
	AddBox(4, 45.322, 4, -4.93, 3, 202.26, Grey, 27.629);

	
	return ret;
}

// Load assets
bool ModuleSceneIntro::CleanUp()
{
	LOG("Unloading Intro scene");

	return true;
}

// Update
update_status ModuleSceneIntro::Update(float dt)
{
	Floor.Render();

	for (int i = 0; i < wall.Count(); i++) {
		wall[i].Render();
	}
	for (int i = 0; i < powerups.Count(); i++) {
		if (powerups[i].invisible != true) {
			powerups[i].Render();
			powerups[i].SetRotation(x, { 0,90,0 });
		}
	}

	if (x < 360) {
		x++;
	}
	else {
		x = 0;
	}

	return UPDATE_CONTINUE;
}

void ModuleSceneIntro::OnCollision(PhysBody3D* body1, PhysBody3D* body2)
{
	if (body1 == sensor[0]) {
		if (start == true) {
			start = false;
			actual.Start();
		}
		if (sensor[1]->checkpoint == true && sensor[2]->checkpoint == true && sensor[3]->checkpoint == true && sensor[4]->checkpoint == true && sensor[5]->checkpoint == true) {
				lap = actual;
				total_time += lap.Read();
				LOG("LAP TIME: %i SECONDS", lap.Read() / 1000);
				sensor[1]->checkpoint = false;
				sensor[2]->checkpoint = false;
				sensor[3]->checkpoint = false;
				sensor[4]->checkpoint = false;
				sensor[5]->checkpoint = false;
				if (lap5 < 5) {
					lap5++;
				}
				if (lap.Read() / 1000 < fastest) {
					fastest = lap.Read() / 1000;
				}
				for (int i = 0; i < powerups.Count(); i++) {
					powerups[i].invisible = false;
				}
				actual.Start();
		}
	}
	else if (body1 == sensor[1]) {
		sensor[1]->checkpoint = true;
	}
	else if (body1 == sensor[2]) {
		sensor[2]->checkpoint = true;
	}
	else if (body1 == sensor[3]) {
		sensor[3]->checkpoint = true;
	}
	else if (body1 == sensor[4]) {
		sensor[4]->checkpoint = true;
	}
	else if (body1 == sensor[5]) {
		sensor[5]->checkpoint = true;
	}
	else if (body1 == sensor[6]) {
		if (App->player->fuel < 100) {
			App->player->fuel += 0.5;
		}
	}
	else if (body1->ispowerup == true) {
		if (powerups[body1->id].invisible != true) {
			LOG("POWER UP");
			powerups[body1->id].invisible = true;
			turbo += 100;
		}
	}
}

void ModuleSceneIntro::AddWall(uint size_x, uint size_y, uint size_z, float pos_x, float pos_y, float pos_z, int tag, float angle) {

	Color color = Black;
	if (tag % 2 == 0) {
		color = Red;
	}
	else {
		color = Black;
	}
	Cube w1;
	w1.size.Set(size_x, size_y, size_z);
	w1.SetPos(pos_x, pos_y, pos_z);
	w1.color = color;
	w1.SetRotation(angle, { 0,90,0 });
	wall.PushBack(w1);
	App->physics->AddBody(wall[wall.Count() - 1], 0);
}
void ModuleSceneIntro::AddBox(uint size_x, uint size_y, uint size_z, float pos_x, float pos_y, float pos_z, Color color, float angle) {


	Cube w1;
	w1.size.Set(size_x, size_y, size_z);
	w1.SetPos(pos_x, pos_y, pos_z);
	w1.color = color;
	w1.SetRotation(angle, { 0,90,0 });
	wall.PushBack(w1);
	App->physics->AddBody(wall[wall.Count() - 1], 0);
}

void ModuleSceneIntro::AddPowerUp(uint size_x, uint size_y, uint size_z, float pos_x, float pos_y, float pos_z, uint id) {

	Cube w1;
	w1.size.Set(size_x, size_y, size_z);
	w1.SetPos(pos_x, pos_y, pos_z);
	w1.color = LBlue;
	powerups.PushBack(w1);
	pu_body[id] = App->physics->AddBody(w1, 0.0f);
	pu_body[id]->SetAsPowerup(true, id);
	pu_body[id]->collision_listeners.add(this);
}

void ModuleSceneIntro::AddSens(float size_x, float  size_y, float  size_z, float pos_x, float pos_y, float pos_z, uint id, float angle) {

	//Cube test;
	sens[id].size = vec3(size_x, size_y, size_z);
	sens[id].SetPos(pos_x, pos_y, pos_z);
	sens[id].SetRotation(angle, { 0,90,0 });
	sensor[id] = App->physics->AddBody(sens[id], 0.0f);
	sensor[id]->SetAsSensor(true);
	sensor[id]->collision_listeners.add(this);
}
